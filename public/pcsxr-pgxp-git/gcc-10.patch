From 3771ceb95d373a46d4885004acb00e5e1a26b686 Mon Sep 17 00:00:00 2001
From: Sergei Trofimovich <slyfox@gentoo.org>
Date: Fri, 17 Jan 2020 23:06:12 +0000
Subject: [PATCH 1/3] gui: fix ODR violation for 'cfgfile' and
 'cfgfile_basename'

Fixes build failure with gcc-10 or -fno-common.
See https://gcc.gnu.org/PR85678 for more details.

Signed-off-by: Sergei Trofimovich <slyfox@gentoo.org>
---
 gui/Linux.h   | 4 ++--
 gui/LnxMain.c | 2 ++
 2 files changed, 4 insertions(+), 2 deletions(-)

diff --git a/gui/Linux.h b/gui/Linux.h
index 2a939050..99404d93 100644
--- a/gui/Linux.h
+++ b/gui/Linux.h
@@ -44,8 +44,8 @@
 
 extern gboolean UseGui;
 extern int StatesC;
-char cfgfile[MAXPATHLEN];	/* ADB Comment this out - make a local var, or at least use gchar funcs */
-char cfgfile_basename[MAXPATHLEN];	/* ADB Comment this out - make a local var, or at least use gchar funcs */
+extern char cfgfile[MAXPATHLEN];	/* ADB Comment this out - make a local var, or at least use gchar funcs */
+extern char cfgfile_basename[MAXPATHLEN];	/* ADB Comment this out - make a local var, or at least use gchar funcs */
 
 int LoadConfig();
 void SaveConfig();
diff --git a/gui/LnxMain.c b/gui/LnxMain.c
index d6dd9316..c7f76fae 100644
--- a/gui/LnxMain.c
+++ b/gui/LnxMain.c
@@ -48,6 +48,8 @@ enum {
 };
 
 gboolean UseGui = TRUE;
+char cfgfile[MAXPATHLEN];	/* ADB Comment this out - make a local var, or at least use gchar funcs */
+char cfgfile_basename[MAXPATHLEN];	/* ADB Comment this out - make a local var, or at least use gchar funcs */
 
 static void CreateMemcard(char *filename, char *conf_mcd) {
 	gchar *mcd;

From 9ae5ea3ba27605204324155714d320e58c7cc968 Mon Sep 17 00:00:00 2001
From: Sergei Trofimovich <slyfox@gentoo.org>
Date: Fri, 17 Jan 2020 23:13:31 +0000
Subject: [PATCH 2/3] plugins/dfinput: fix ODR violation for 'controllerMap'

Fixes build failure with gcc-10 or -fno-common.
See https://gcc.gnu.org/PR85678 for more details.

Signed-off-by: Sergei Trofimovich <slyfox@gentoo.org>
---
 plugins/dfinput/pad.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/plugins/dfinput/pad.h b/plugins/dfinput/pad.h
index 3051e6ad..625d4102 100644
--- a/plugins/dfinput/pad.h
+++ b/plugins/dfinput/pad.h
@@ -151,7 +151,7 @@ typedef struct tagKeyDef {
 enum { ANALOG_XP = 0, ANALOG_XM, ANALOG_YP, ANALOG_YM };
 
 #if SDL_VERSION_ATLEAST(2,0,0)
-SDL_GameControllerButton controllerMap[DKEY_TOTAL];	
+extern SDL_GameControllerButton controllerMap[DKEY_TOTAL];
 #endif
 
 typedef struct tagPadDef {

From 8bcd35cbbac3fb657ed482c179ab0e97d14c6bef Mon Sep 17 00:00:00 2001
From: Sergei Trofimovich <slyfox@gentoo.org>
Date: Fri, 17 Jan 2020 23:19:43 +0000
Subject: [PATCH 3/3] plugins/dfnet: fix ODR violation for various globals

Fixes build failure with gcc-10 or -fno-common.
See https://gcc.gnu.org/PR85678 for more details.

Signed-off-by: Sergei Trofimovich <slyfox@gentoo.org>
---
 plugins/dfnet/cfg.c   | 16 ++++++++++++++++
 plugins/dfnet/dfnet.h | 30 +++++++++++++++---------------
 2 files changed, 31 insertions(+), 15 deletions(-)

diff --git a/plugins/dfnet/cfg.c b/plugins/dfnet/cfg.c
index 921efbe3..03e31d1d 100644
--- a/plugins/dfnet/cfg.c
+++ b/plugins/dfnet/cfg.c
@@ -13,6 +13,22 @@
 
 #define CFG_FILENAME "dfnet.cfg"
 
+// definitions of globals declared in "dfnet.h"
+Config conf;
+int sock;
+char *PadSendData;
+char *PadRecvData;
+char PadSendSize;
+char PadRecvSize;
+char PadSize[2];
+int PadCount;
+int PadCountMax;
+int PadInit;
+int Ping;
+volatile int WaitCancel;
+fd_set rset;
+fd_set wset;
+
 void SaveConf() {
 	FILE *f;
 
diff --git a/plugins/dfnet/dfnet.h b/plugins/dfnet/dfnet.h
index b824a790..1c4e5bdb 100644
--- a/plugins/dfnet/dfnet.h
+++ b/plugins/dfnet/dfnet.h
@@ -56,7 +56,7 @@ __private_extern char* PLUGLOC(char* toloc);
 
 typedef void* HWND;
 
-struct timeval tm;
+extern struct timeval tm;
 
 #define CALLBACK
 
@@ -70,24 +70,24 @@ typedef struct {
 	char ipAddress[32];
 } Config;
 
-Config conf;
+extern Config conf;
 
 void LoadConf();
 void SaveConf();
 
-int sock;
-char *PadSendData;
-char *PadRecvData;
-char PadSendSize;
-char PadRecvSize;
-char PadSize[2];
-int PadCount;
-int PadCountMax;
-int PadInit;
-int Ping;
-volatile int WaitCancel;
-fd_set rset;
-fd_set wset;
+extern int sock;
+extern char *PadSendData;
+extern char *PadRecvData;
+extern char PadSendSize;
+extern char PadRecvSize;
+extern char PadSize[2];
+extern int PadCount;
+extern int PadCountMax;
+extern int PadInit;
+extern int Ping;
+extern volatile int WaitCancel;
+extern fd_set rset;
+extern fd_set wset;
 
 long sockInit();
 long sockShutdown();
